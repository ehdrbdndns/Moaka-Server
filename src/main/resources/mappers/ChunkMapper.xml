<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.moaka.mapper.ChunkMapper">
    <select id="retrieveMainChunkBySectionNo" resultType="Chunk">
        select ch.*,
               IF(my_cl.no, my_cl.no, 0) AS like_no,
               count(Distinct cl.no)     AS like_count,
               count(distinct chat.no)   AS chat_count,
               ro.room_id                AS room_id,
               ro.no                     AS room_no
        from chunk AS ch
                 LEFT JOIN chunk_like as cl ON ch.no = cl.chunk_no
                 LEFT JOIN chunk_like as my_cl ON ch.no = my_cl.chunk_no AND my_cl.user_no = ${user_no}
                 LEFT JOIN room as ro ON ro.chunk_no = ch.no
                 LEFT JOIN chat as chat ON chat.room_no = ro.no
        where ch.section_no = ${section_no}
        GROUP BY ch.no
        ORDER BY no DESC
    </select>
    <insert id="insertChunk">
        insert into chunk(link, thumbnail, section_no, description, regdate, user_no, favicon, domain)
        values(#{link}, #{thumbnail}, ${section_no}, #{description}, #{regdate}, ${user_no}, #{favicon}, #{domain})
        <selectKey keyProperty="no" resultType="int">
            SELECT LAST_INSERT_ID()
        </selectKey>
    </insert>
    <update id="updateChunk">
        update chunk
        set link=#{link},
            thumbnail=#{thumbnail},
            section_no=${section_no},
            description=#{description},
            favicon=#{favicon},
            domain=#{domain}
        where no = ${no}
    </update>
    <update id="updateChunkFromChrome">
        update chunk
        set description=#{description},
            section_no=${section_no}
        where no = ${no}
    </update>
    <delete id="deleteChunk">
        delete
        from chunk
        where no = ${no}
    </delete>
    <select id="isAuthorityOfDeleteChunk" resultType="boolean">
        SELECT EXISTS(SELECT *
                      FROM chunk AS ch
                               JOIN section AS se ON ch.section_no = se.no
                               JOIN archive AS ar ON se.archive_no = ar.no
                      WHERE ch.no = ${no}
                        AND (ch.user_no = ${user_no} OR ar.user_no = ${user_no}));
    </select>
    <select id="isAuthorityOfUpdateChunk" resultType="boolean">
        SELECT EXISTS(SELECT *
                      FROM chunk
                      WHERE user_no = ${user_no} AND no = ${no})
    </select>
</mapper>